"""
리트코드 937
로그를 재정렬하라. 기준은 다음과 같다.
1. 로그의 가장 앞 부분은 식별자다.
2. 문자로 구성된 로그가 숫자 로그보다 앞에 온다.
3. 식별자는 순서에 영향을 끼치지 않지만 문자가 동일할 경우 식별자 순으로 한다.
4. 숫자 로그는 입력 순서대로 한다.
"""

# 숫자로그(dig1,2,3)와 문자로그(let1,2)가 있음.
# 문자로그가 앞에 오도록 정렬해야 함.
# 기존의 순서에서 재정렬 하는 것.
# 그러므로 명시한 기준에 부합되지 않는다면 그대로 나둬야 함.
# 따라서 문자가 동일한 경우에만 식별자 순으로 정렬해야 함.
# 문자가 동일하지 않은 경우는 그냥 놔둬야 함.


# 리스트를 순회하며 문자열의 앞 세글자가 "dig"인지, "let"인지 확인
# 두 개씩 비교를 해 나가는데, 만약 앞이 dig이고, 뒤가 let이라면 서로 교환.
# 만약 서로 같다면(둘다 let 이라면) 4번째 글자까지 비교하여 더 큰 숫자가 뒤에 가도록 교환.
# 버블 정렬 개념이므로 last를 줄여가면서을 줄여가며 탐색


def reorder_log(logs):
    last = len(logs)
    for i in range(len(logs)-1):
        last -= 1
        for j in range(last):
            if logs[i][:3] == "dig" and logs[i+1][:3] == "let":
                logs[i], logs[i+1] = logs[i+1], logs[i]
            elif logs[i][:3] == "let" and logs[i+1][:3] == "let":
                if logs[i][5:] == logs[i+1][5:]:
                    if logs[i][3] > logs[i+1][3]:
                        logs[i], logs[i+1] = logs[i+1], logs[i]
    return logs

